---
title: JMS!
first:  Java Message Service是由Sun开发的，它为 Java程序提供一种访问企业消息系统的方法。在讨论JMS之前，我们分来析一下企业消息系统。
layout: default
author:
  name: Aliece TT
  url: http://aliecett.wicp.net
---

 Java Message Service是由Sun开发的，它为 Java程序提供一种访问企业消息系统的方法。在讨论JMS之前，我们分来析一下企业消息系统。
 
JMS提供了两种消息通信模型：

      Ø 点到点（P2P）模型 (queue)

      Ø 发布/订阅（Pub/Sub）模型(topic)
      
      a-->queue-->c\d
      
      b-->topic-->e\f

在ClientA、C、D之间的消息是点对点模型，使用这种模型，客户端发送消息到队列目的地（Queue），从这个队列里面只有一个消息接收者可以收到那个消息，其他访问同一目的地的接收者不会接收到该消息。如ClientC接收Queue中的Msg1消息，ClientD接收Queue中的Msg2消息。 
      
在ClientB、E、F之间的消息是发布／订阅模型。使用这种广播模型，一个客户端发送消息给主题目的地（Topic），任何数量的消费订阅者可以从这个主题目的地来接收它们。如：ClientE和ClientF都接收这个Msg3这条消息。


##点对点模型的特点：

Ø  每条消息有一个消费者

      每条只有一个消费者，如果一条消息被消息者接收，那么其他的消费者就不能得到这条消息了。

Ø 发送和接受消息与时间没有关系

      也就是说，生产者在发送消息后，消费者可以在任意的时刻接收，但有两个前提：

            1、消息未过期

            2、消息没有被其他的用户接收

      消费者也可以先运行，当生产者一运行，将消息发送到队列中，消费者即可从队列中获得消息，这叫“守株待兔“。

Ø  消费者必须确认对消息的接收

      收到消息后消费者必须确认消息已被接收，否则JMS服务提供者会认为该消息没有被接收，那么这条消息仍然可以被其他人接收。程序可以自动进行确认，不需要人工干预。

Ø  非持久的消息最多只发送一次

      非持久的消息最多只发送一次，表示消息有可能未被发送，造成未被发送的原因可能有：

            1、 JMS服务提供者出现宕机等情况，造成非持久信息的丢失

            2、 队列中的消息过期，未被接收

Ø  持久的消息严格发送一次

      我们可以将比较重要的消息设置为持久化的消息，持久化后的消息不会因为JMS服务提供者的故障或者其他原因造成消息丢失。
      

##发布/订阅模型的特点：

Ø  每个消息都可以有多个（0，1，……）订阅者

      每条消息可以有多个消费者，如果报纸和杂志一样，谁订阅了谁都可以获得。

Ø  订阅者只能消费他们订阅之后出版的消息

      这就要求订阅者必须先订阅，生产者再发布。即订阅者必须先运行，再等待生产者的运行，这和点对点类型有所差异。

Ø  订阅者必须保持为活动状态才能使用这些消息

      即订阅者必须保持活动状态等待发布者发布的消息，如果订阅者在发布者发布消息之后才运行，则不能获得先前发布者发布的消息。