---
title: Java AOP!
first:  Java AOP
layout: default
author:
  name: Aliece TT
  url: http://aliecett.wicp.net
---

Client->Server->service->contolllor->request->requestType->invoke service->dao->databse->aop->excutesql

##CGlib

CGlib概述：

cglib（Code Generation Library）是一个强大的,高性能,高质量的Code生成类库。它可以在运行期扩展Java类与实现Java接口。

cglib封装了asm，可以在运行期动态生成新的class。

cglib用于AOP，jdk中的proxy必须基于接口，cglib却没有这个限制。

[http://www.blogjava.net/stone2083/archive/2008/03/16/186615.html](http://www.blogjava.net/stone2083/archive/2008/03/16/186615.html)

##ASM

Java byteCode

类似于直接操作java的字节码，可以通过代码动态生成class

[http://www.iteye.com/topic/98178](http://www.iteye.com/topic/98178)

##Spring AOP

详情请看
[/proxy_adapter](/proxy_adapter)

Proxy 毕竟是通过反射实现的，必须在效率上付出代价：有实验数据表明，调用反射比一般的函数开销至少要大 10 倍。而且，从程序实现上可以看出，对 proxy class 的所有方法调用都要通过使用反射的 invoke 方法。因此，对于性能关键的应用，使用 proxy class 是需要精心考虑的，以避免反射成为整个应用的瓶颈。

ASM 能够通过改造既有类，直接生成需要的代码。增强的代码是硬编码在新生成的类文件内部的，没有反射带来性能上的付出。同时，ASM 与 Proxy 编程不同，不需要为增强代码而新定义一个接口，生成的代码可以覆盖原来的类，或者是原始类的子类。它是一个普通的 Java 类而不是 proxy 类，甚至可以在应用程序的类框架中拥有自己的位置，派生自己的子类。

